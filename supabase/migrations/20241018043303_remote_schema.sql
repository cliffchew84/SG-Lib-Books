

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."books_avail" (
    "ItemNo" "text" NOT NULL,
    "CallNumber" "text" NOT NULL,
    "BranchName" "text" NOT NULL,
    "StatusDesc" "text",
    "InsertTime" bigint,
    "BID" bigint,
    "DueDate" "date"
);


ALTER TABLE "public"."books_avail" OWNER TO "postgres";


COMMENT ON TABLE "public"."books_avail" IS 'Books Availability';



CREATE TABLE IF NOT EXISTS "public"."books_info" (
    "BID" bigint NOT NULL,
    "TitleName" "text",
    "Author" "text",
    "PublishYear" "text",
    "Publisher" "text",
    "Subjects" "text",
    "isbns" "text"
);


ALTER TABLE "public"."books_info" OWNER TO "postgres";


COMMENT ON TABLE "public"."books_info" IS 'Books Information';



ALTER TABLE "public"."books_info" ALTER COLUMN "BID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."books_info_BID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."user_books" (
    "UserName" "text" NOT NULL,
    "BID" bigint NOT NULL
);


ALTER TABLE "public"."user_books" OWNER TO "postgres";


COMMENT ON TABLE "public"."user_books" IS 'User saved Books';



CREATE TABLE IF NOT EXISTS "public"."user_search" (
    "UserName" "text" NOT NULL,
    "search_time" bigint NOT NULL,
    "Title" "text",
    "Author" "text"
);


ALTER TABLE "public"."user_search" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."user_status" (
    "UserName" "text" NOT NULL,
    "status" boolean NOT NULL
);


ALTER TABLE "public"."user_status" OWNER TO "postgres";


COMMENT ON TABLE "public"."user_status" IS 'Tracks whether the user is updating his books or not';



CREATE TABLE IF NOT EXISTS "public"."users" (
    "UserName" "text" NOT NULL,
    "HashedPassword" "text",
    "latest_login" bigint,
    "email_address" "text",
    "preferred_lib" "text",
    "pw_ans" "text",
    "pw_qn" "text",
    "books_updated" real,
    "registered_time" bigint
);


ALTER TABLE "public"."users" OWNER TO "postgres";


ALTER TABLE ONLY "public"."books_avail"
    ADD CONSTRAINT "books_avail_pkey" PRIMARY KEY ("ItemNo");



ALTER TABLE ONLY "public"."books_info"
    ADD CONSTRAINT "books_info_BID_key" UNIQUE ("BID");



ALTER TABLE ONLY "public"."books_info"
    ADD CONSTRAINT "books_info_pkey" PRIMARY KEY ("BID");



ALTER TABLE ONLY "public"."user_books"
    ADD CONSTRAINT "user_books_pkey" PRIMARY KEY ("UserName", "BID");



ALTER TABLE ONLY "public"."user_search"
    ADD CONSTRAINT "user_search_pkey" PRIMARY KEY ("UserName", "search_time");



ALTER TABLE ONLY "public"."user_status"
    ADD CONSTRAINT "user_status_pkey" PRIMARY KEY ("UserName");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_pkey" PRIMARY KEY ("UserName");





ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";


















































































































































































































GRANT ALL ON TABLE "public"."books_avail" TO "anon";
GRANT ALL ON TABLE "public"."books_avail" TO "authenticated";
GRANT ALL ON TABLE "public"."books_avail" TO "service_role";



GRANT ALL ON TABLE "public"."books_info" TO "anon";
GRANT ALL ON TABLE "public"."books_info" TO "authenticated";
GRANT ALL ON TABLE "public"."books_info" TO "service_role";



GRANT ALL ON SEQUENCE "public"."books_info_BID_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."books_info_BID_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."books_info_BID_seq" TO "service_role";



GRANT ALL ON TABLE "public"."user_books" TO "anon";
GRANT ALL ON TABLE "public"."user_books" TO "authenticated";
GRANT ALL ON TABLE "public"."user_books" TO "service_role";



GRANT ALL ON TABLE "public"."user_search" TO "anon";
GRANT ALL ON TABLE "public"."user_search" TO "authenticated";
GRANT ALL ON TABLE "public"."user_search" TO "service_role";



GRANT ALL ON TABLE "public"."user_status" TO "anon";
GRANT ALL ON TABLE "public"."user_status" TO "authenticated";
GRANT ALL ON TABLE "public"."user_status" TO "service_role";



GRANT ALL ON TABLE "public"."users" TO "anon";
GRANT ALL ON TABLE "public"."users" TO "authenticated";
GRANT ALL ON TABLE "public"."users" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
